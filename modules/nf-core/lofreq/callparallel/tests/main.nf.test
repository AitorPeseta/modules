nextflow_process {

    name "Test Process LOFREQ_CALLPARALLEL"
    script "../main.nf"
    process "LOFREQ_CALLPARALLEL"

    tag "modules"
    tag "modules_nfcore"
    tag "lofreq"
    tag "lofreq/callparallel"


    test("allignment_pair") {

        when {
            process {
            """
            input[0] = [ 
                [ 
                    id:'test' 
                ],
                [
                    file(params.test_data['sarscov2']['illumina']['test_paired_end_sorted_bam'], checkIfExists: true)
                ],
                [
                    file(params.test_data['sarscov2']['illumina']['test_paired_end_sorted_bam_bai'], checkIfExists: true)
                ],
                [
                    file(params.test_data['sarscov2']['genome']['test_bed'])
                ]
            ]
            input[1] = [
                    file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)       
                ]
            input[2] = [
                   file(params.test_data['sarscov2']['genome']['genome_fasta_fai'], checkIfExists: true) 
                ]
            """
            }
        }

        then {
            assertAll(
                {assert process.success},
                {assert snapshot(process.out).match()}
            )
            
        }

    }

    test("allignment_stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test'], // meta map
                    file(params.test_data['sarscov2']['illumina']['test_paired_end_sorted_bam'], checkIfExists: true)
                    ]
                input[1] = [
                    file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                    ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
